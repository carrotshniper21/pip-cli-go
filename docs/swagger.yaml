basePath: /api
definitions:
  film.FilmSearch:
    description: stores the film data
    properties:
      casts:
        example:
        - cast
        items:
          type: string
        type: array
      country:
        example:
        - country
        items:
          type: string
        type: array
      description:
        example: Description
        type: string
      duration:
        example: 0 min
        type: string
      genres:
        example:
        - genre
        items:
          type: string
        type: array
      href:
        example: https://example.com/film/1
        type: string
      id:
        example: movie/film-1
        type: string
      idParts:
        $ref: '#/definitions/film.IdSplit'
      poster:
        example: https://example.com/poster/1.jpg
        type: string
      production:
        example:
        - production
        items:
          type: string
        type: array
      released:
        example: "2000"
        type: string
      title:
        example: Film
        type: string
    type: object
  film.FilmServer:
    properties:
      linkID:
        type: string
      serverName:
        type: string
    type: object
  film.FilmSourcesEncrypted:
    properties:
      server:
        type: integer
      sources:
        type: string
      tracks:
        items:
          $ref: '#/definitions/film.Track'
        type: array
    type: object
  film.IdSplit:
    description: stores the film ID parts
    properties:
      idNum:
        example: 1
        type: integer
      name:
        example: film
        type: string
      type:
        example: movie
        type: string
    type: object
  film.Track:
    properties:
      default:
        type: boolean
      file:
        type: string
      kind:
        type: string
      label:
        type: string
    type: object
  show.Episode:
    properties:
      episodeID:
        type: string
      title:
        type: string
    type: object
  show.IdSplit:
    description: stores the show ID parts
    properties:
      idNum:
        example: 1
        type: integer
      name:
        example: show
        type: string
      type:
        example: show
        type: string
    type: object
  show.ShowSearch:
    description: stores the show data
    properties:
      casts:
        example:
        - cast
        items:
          type: string
        type: array
      country:
        example:
        - country
        items:
          type: string
        type: array
      description:
        example: Description
        type: string
      duration:
        example: 0 min
        type: string
      genres:
        example:
        - genre
        items:
          type: string
        type: array
      href:
        example: https://example.com/show/1
        type: string
      id:
        example: show/episode-1
        type: string
      idParts:
        $ref: '#/definitions/show.IdSplit'
      poster:
        example: https://example.com/poster/1.jpg
        type: string
      production:
        example:
        - production
        items:
          type: string
        type: array
      released:
        example: "2000"
        type: string
      title:
        example: Show
        type: string
    type: object
  show.ShowSeason:
    properties:
      episodes:
        items:
          $ref: '#/definitions/show.Episode'
        type: array
      serverID:
        type: string
      serverName:
        type: string
    type: object
  show.ShowServer:
    properties:
      linkID:
        type: string
      serverName:
        type: string
    type: object
  show.ShowSourcesEncrypted:
    properties:
      server:
        type: integer
      sources:
        type: string
      tracks:
        items:
          $ref: '#/definitions/show.Track'
        type: array
    type: object
  show.Track:
    properties:
      default:
        type: boolean
      file:
        type: string
      kind:
        type: string
      label:
        type: string
    type: object
info:
  contact: {}
  description: Pipebomb API for searching and streaming movies
  title: Pipebomb API
  version: "1.0"
paths:
  /films/vip/search:
    get:
      consumes:
      - application/json
      description: Search for films by query
      parameters:
      - description: Search Query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/film.FilmSearch'
      summary: Search for films
      tags:
      - films
  /films/vip/servers:
    get:
      consumes:
      - application/json
      description: Fetch film servers by film ID
      parameters:
      - description: Film ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/film.FilmServer'
            type: array
      summary: Fetch film servers
      tags:
      - films
  /films/vip/sources:
    get:
      consumes:
      - application/json
      description: Fetch film servers by server ID
      parameters:
      - description: Server ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/film.FilmSourcesEncrypted'
            type: array
      summary: Fetch film sources
      tags:
      - films
  /shows/vip/search:
    get:
      consumes:
      - application/json
      description: Search for shows by query
      parameters:
      - description: Search Query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/show.ShowSearch'
      summary: Search for shows
      tags:
      - shows
  /shows/vip/seasons:
    get:
      consumes:
      - application/json
      description: Fetch show seasons and episodes by id
      parameters:
      - description: Search Query
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/show.ShowSeason'
            type: array
      summary: Fetch show seasons and episodes
      tags:
      - shows
  /shows/vip/servers:
    get:
      consumes:
      - application/json
      description: Fetch show servers by episode ID
      parameters:
      - description: Episode ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/show.ShowServer'
            type: array
      summary: Fetch show servers
      tags:
      - shows
  /shows/vip/sources:
    get:
      consumes:
      - application/json
      description: Fetch show servers by server ID
      parameters:
      - description: Server ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/show.ShowSourcesEncrypted'
            type: array
      summary: Fetch show sources
      tags:
      - shows
swagger: "2.0"
